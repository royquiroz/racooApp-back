{"version":3,"sources":["components/Navbar/Menu.js","components/Navbar/Navbar.js","service.js","components/Auth/Auth.js","components/Card/CardCompany.js","helpers/states.js","components/Modal/NewCompany.js","components/Company/Company.js","components/Company/ListUsers.js","components/Company/CompanyData.js","components/Tables/TableCalls.js","components/Company/CompanyCalls.js","components/Modal/NewClient.js","components/Company/CompanyDetail.js","components/Card/CardClient.js","components/Client/Client.js","helpers/positions.js","components/Client/ClientData.js","components/Client/ClientCalls.js","components/Modal/NewCall.js","components/Client/ClientDetail.js","components/Call/Call.js","components/Call/CallDetail.js","components/Call/ClientNew.js","components/Call/CallNew.js","components/Home.js","Router.js","App.js","serviceWorker.js","index.js","logo.png"],"names":["ListMenu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","signup","e","localStorage","removeItem","setState","message","isOpen","setTimeout","window","location","handleClose","state","_this$props","props","open","toggleDrawer","_this$state","react_default","a","createElement","core_index_es","onClose","tabIndex","role","className","onClick","onKeyDown","src","Logo","alt","component","NavLink","to","index_es","primary","button","Component","NavBar","user","JSON","parse","getItem","position","color","align","aria-label","variant","style","margin","Menu","base_url","hostname","headers","Content-Type","x-access-token","register","auth","axios","post","concat","then","error","msg","catch","err","response","status","data","login","res","setItem","token","stringify","getCompanies","name","checked","get","companies","length","postCompany","company","console","log","_id","patchCompany","id","patch","getClients","clients","postClient","client","patchClient","getCalls","initDate","finDate","calls","postCall","patchCallId","Auth","handleChange","target","value","handleRegister","preventDefault","history","push","handleLogin","email","password","confirmPassword","container","spacing","item","xs","elevation","onSubmit","label","fullWidth","onChange","type","CardCompany","_ref","md","lawyer","number","estados","Link","size","States","NewCompany","handleChangeKind","kind","handleSubmit","openMessage","resetForm","openModal","scroll","control","select","map","option","key","Company","handleClick","companySearch","handleSearchCompany","loading","switch","_this2","_this$state2","sm","placeholder","i","Card_CardCompany","Modal_NewCompany","assign","User","undefined","last_name","CompanyData","defaultValue","telephone","textAlign","TableCalls","handleChangePage","event","page","handleChangeRowsPerPage","rowsPerPage","goToCall","renderKind","fromCalls","viewDetails","slice","hover","system","prev_db","prev_db_user","ending","moment","created_at","format","colSpan","filter","rowsPerPageOptions","count","onChangePage","onChangeRowsPerPage","CompanyCalls","sort","b","Date","getTime","width","Tables_TableCalls","NewClient","disabled","CompanyDetail","getCompanyId","match","params","indicatorColor","textColor","centered","icon","Company_CompanyData","ListUsers","Company_CompanyCalls","Modal_NewClient","CardClient","Client","clientSearch","handleSearchClient","filtered","Card_CardClient","positions","Positions","ClientData","htmlFor","multiple","input","renderValue","selected","extension","description","multiline","rowsMax","ClientCalls","NewCall","problem","listClients","row","rows","ClientDetail","getClientId","Client_ClientData","Client_ClientCalls","Modal_NewCall","Call","handleChangeDate","date","dates","_d","handleSearch","init","fin","add","handleViewDetails","_this3","material_ui_pickers_esm","keyboard","CallDetail","handleSelect","record","update","forEach","marginTop","react_select_esm","isSearchable","options","solution","labelWidth","CallNew","searchClients","ClientNew","Home","Router","Switch","Route","exact","path","render","components_Home","Redirect","components_Client_Client","Client_ClientDetail","components_Company_Company","Company_CompanyDetail","components_Call_Call","Call_CallNew","Call_CallDetail","components_Auth_Auth","App","Navbar","src_Router","Boolean","ReactDOM","BrowserRouter","utils","MomentUtils","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.80fa9cdc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {\r\n  Drawer,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  ListSubheader,\r\n  Divider,\r\n  Snackbar\r\n} from \"@material-ui/core\";\r\nimport {\r\n  BusinessCenterTwoTone,\r\n  PersonTwoTone,\r\n  PhoneInTalkTwoTone,\r\n  FaceTwoTone,\r\n  ExitToAppTwoTone\r\n} from \"@material-ui/icons\";\r\nimport Logo from \"../../logo.png\";\r\n\r\nclass ListMenu extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      isOpen: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  signup = e => {\r\n    localStorage.removeItem(\"token\");\r\n    localStorage.removeItem(\"user\");\r\n    this.setState({ message: \"Cerraste Sesión exitosamente\", isOpen: true });\r\n    setTimeout(() => {\r\n      window.location = \"/\";\r\n    }, 3000);\r\n  };\r\n\r\n  handleClose = e => {\r\n    this.setState({ message: \"\", isOpen: false });\r\n  };\r\n\r\n  render() {\r\n    const { open, toggleDrawer } = this.props;\r\n    const { isOpen, message } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Drawer open={open} onClose={toggleDrawer}>\r\n          <div\r\n            tabIndex={0}\r\n            role=\"button\"\r\n            className=\"drawerList\"\r\n            onClick={toggleDrawer}\r\n            onKeyDown={toggleDrawer}\r\n          >\r\n            <List>\r\n              <ListSubheader>\r\n                <img src={Logo} alt=\"logo\" className=\"logoMenu\" />\r\n              </ListSubheader>\r\n              <ListItem component={NavLink} to=\"/companies\">\r\n                <ListItemIcon>\r\n                  <BusinessCenterTwoTone />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Compañias\" />\r\n              </ListItem>\r\n              <ListItem component={NavLink} to=\"/clients\">\r\n                <ListItemIcon>\r\n                  <PersonTwoTone />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Clientes\" />\r\n              </ListItem>\r\n              <ListItem component={NavLink} to=\"/calls\">\r\n                <ListItemIcon>\r\n                  <PhoneInTalkTwoTone />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Llamadas\" />\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <List>\r\n              <ListItem button>\r\n                <ListItemIcon>\r\n                  <FaceTwoTone />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Perfil\" />\r\n              </ListItem>\r\n              <ListItem button onClick={this.signup}>\r\n                <ListItemIcon>\r\n                  <ExitToAppTwoTone />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Cerrar Sesión\" />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n        <Snackbar onClose={this.handleClose} open={isOpen} message={message} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ListMenu;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Menu } from \"@material-ui/icons/\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Button\r\n  //Avatar\r\n} from \"@material-ui/core\";\r\nimport ListMenu from \"./Menu\";\r\nimport Logo from \"../../logo.png\";\r\n\r\nclass NavBar extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: {},\r\n      open: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n    this.setState({ user: user });\r\n  }\r\n\r\n  toggleDrawer = () => {\r\n    let { open } = this.state;\r\n    open = !open;\r\n    this.setState({ open: open });\r\n  };\r\n\r\n  render() {\r\n    const { /*user,*/ open } = this.state;\r\n    return (\r\n      <div className=\"root\">\r\n        <AppBar position=\"fixed\" color=\"default\">\r\n          <Toolbar>\r\n            {localStorage.getItem(\"token\") ? (\r\n              <div className=\"grow\" align=\"left\">\r\n                <IconButton\r\n                  color=\"inherit\"\r\n                  aria-label=\"Menu\"\r\n                  onClick={this.toggleDrawer}\r\n                >\r\n                  <Menu />\r\n                </IconButton>\r\n\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  style={{ margin: \"0 40%\" }}\r\n                  component={NavLink}\r\n                  to=\"/call\"\r\n                >\r\n                  Nueva Llamada\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              <Typography color=\"inherit\" className=\"grow\" align=\"left\">\r\n                <img src={Logo} alt=\"logo\" className=\"logoAuth\" />\r\n              </Typography>\r\n            )}\r\n\r\n            {!localStorage.getItem(\"token\") ? (\r\n              <div>\r\n                <Button component={NavLink} color=\"inherit\" to=\"/login\">\r\n                  Iniciar Sesión\r\n                </Button>\r\n                <Button component={NavLink} color=\"inherit\" to=\"/signup\">\r\n                  Registrarse\r\n                </Button>\r\n              </div>\r\n            ) : (\r\n              /*<Avatar\r\n                alt=\"profile_pic\"\r\n                src={\r\n                  user.profile_pic === null\r\n                    ? \"https://res.cloudinary.com/royquiroz/image/upload/v1547066938/male-face01_n03jts.png\"\r\n                    : user.profile_pic\r\n                }\r\n                className=\"avatar\"\r\n              />*/\r\n              <div> </div>\r\n            )}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <ListMenu open={open} toggleDrawer={this.toggleDrawer} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import axios from \"axios\";\r\n\r\nconst base_url =\r\n  window.location.hostname === \"localhost\"\r\n    ? \"http://localhost:3000/api\"\r\n    : \"https://racooapp.herokuapp.com/api\";\r\n\r\nconst headers = {\r\n  \"Content-Type\": \"application/json\",\r\n  \"x-access-token\": localStorage.getItem(\"token\")\r\n};\r\n\r\n//Servicios de autorizacion\r\nexport const register = auth => {\r\n  return axios\r\n    .post(`${base_url}/auth/register`, auth)\r\n    .then(() => {\r\n      return {\r\n        error: false,\r\n        msg: \"Usuario creado con éxito\"\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const login = auth => {\r\n  return axios\r\n    .post(`${base_url}/auth/login`, auth)\r\n    .then(res => {\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n      return {\r\n        error: false,\r\n        msg: \"Haz iniciado de sesión correctamente\"\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\n//Servicios de alta y consulta de compañias\r\nexport const getCompanies = (name, checked) => {\r\n  return axios\r\n    .get(`${base_url}/company?name=${name}&checked=${checked}`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        companies: res.data.companies,\r\n        msg: `${res.data.companies.length} Compañias encontradas exitosamente`\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const getAllCompanies = () => {\r\n  return axios\r\n    .get(`${base_url}/company/all`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        companies: res.data.companies,\r\n        msg: `${res.data.companies.length} Compañias encontradas exitosamente`\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const getCompanyId = id => {\r\n  return axios\r\n    .get(`${base_url}/company/${id}`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        company: res.data.company,\r\n        msg: \"Compañia encontradas exitosamente\"\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const postCompany = company => {\r\n  console.log(company);\r\n  return axios\r\n    .post(`${base_url}/company`, company, { headers })\r\n    .then(res => {\r\n      console.log(res);\r\n      return {\r\n        error: false,\r\n        company: res.data.company._id,\r\n        msg: res.data.msg\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const patchCompany = (id, company) => {\r\n  console.log(company);\r\n  return axios\r\n    .patch(`${base_url}/company/${id}`, company, { headers })\r\n    .then(res => {\r\n      console.log(res);\r\n      return {\r\n        error: false,\r\n        company: res.data.company,\r\n        msg: res.data.msg\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\n//Servicios de alta y consulta de clientes\r\nexport const getClients = name => {\r\n  return axios\r\n    .get(`${base_url}/client?name=${name}`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        clients: res.data.clients,\r\n        msg: `${res.data.clients.length} Clientes encontrados exitosamente`\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const postClient = client => {\r\n  return axios\r\n    .post(`${base_url}/client`, client, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        client: res.data.client._id,\r\n        msg: res.data.msg\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const getClientId = id => {\r\n  return axios\r\n    .get(`${base_url}/client/${id}`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        client: res.data.client,\r\n        msg: \"Cliente encontrado exitosamente\"\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const patchClient = (id, client) => {\r\n  console.log(client);\r\n  return axios\r\n    .patch(`${base_url}/client/${id}`, client, { headers })\r\n    .then(res => {\r\n      console.log(res);\r\n      return {\r\n        error: false,\r\n        client: res.data.client,\r\n        msg: res.data.msg\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\n//Servicios de alta y consulta de clientes\r\nexport const getCalls = (initDate, finDate) => {\r\n  return axios\r\n    .get(`${base_url}/call?init=${initDate}&fin=${finDate}`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        calls: res.data.calls,\r\n        msg: `${res.data.calls.length} LLamadas encontradas exitosamente`\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const postCall = call => {\r\n  return axios\r\n    .post(`${base_url}/call`, call, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        call: res.data.call._id,\r\n        msg: res.data.msg\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const getCallId = id => {\r\n  return axios\r\n    .get(`${base_url}/call/${id}`, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        call: res.data.call,\r\n        msg: \"Llamada encontrada exitosamente\"\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n\r\nexport const patchCallId = (id, call) => {\r\n  return axios\r\n    .patch(`${base_url}/call/${id}`, call, { headers })\r\n    .then(res => {\r\n      return {\r\n        error: false,\r\n        call: res.data.call,\r\n        msg: \"Cambios guardados exitosamente\"\r\n      };\r\n    })\r\n    .catch(err => {\r\n      return {\r\n        error: err.response.status,\r\n        msg: err.response.data.msg\r\n      };\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Grid, Paper, TextField, Button, Snackbar } from \"@material-ui/core\";\r\nimport { register, login } from \"../../service\";\r\n\r\nclass Auth extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      user: {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\"\r\n      },\r\n      open: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  handleChange = e => {\r\n    const { user } = this.state;\r\n    let field = e.target.name;\r\n    user[field] = e.target.value;\r\n\r\n    this.setState({ user });\r\n  };\r\n\r\n  handleClose = e => {\r\n    this.setState({ message: \"\", open: false });\r\n  };\r\n\r\n  handleRegister = e => {\r\n    e.preventDefault();\r\n    register(this.state.user).then(res => {\r\n      if (!res.error) {\r\n        this.setState({ message: res.msg, open: true });\r\n        this.props.history.push(\"/login\");\r\n      } else {\r\n        this.setState({ message: res.msg, open: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleLogin = e => {\r\n    e.preventDefault();\r\n    login(this.state.user).then(res => {\r\n      if (!res.error) {\r\n        this.setState({ message: res.msg, open: true });\r\n        setTimeout(() => {\r\n          this.props.history.push(\"/\");\r\n        }, 2000);\r\n      } else {\r\n        this.setState({ message: res.msg, open: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { open, message } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <Grid container spacing={24}>\r\n          <Grid item xs>\r\n            &nbsp;\r\n          </Grid>\r\n          <Grid item xs={4}>\r\n            <Paper className=\"auth\" elevation={6}>\r\n              <form\r\n                onSubmit={\r\n                  this.props.auth === \"login\"\r\n                    ? this.handleLogin\r\n                    : this.handleRegister\r\n                }\r\n              >\r\n                {this.props.auth === \"signup\" ? (\r\n                  <TextField\r\n                    label=\"Nombre\"\r\n                    margin=\"normal\"\r\n                    name=\"name\"\r\n                    fullWidth\r\n                    onChange={this.handleChange}\r\n                  />\r\n                ) : null}\r\n                <TextField\r\n                  label=\"Email\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  fullWidth\r\n                  onChange={this.handleChange}\r\n                />\r\n                <TextField\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  fullWidth\r\n                  onChange={this.handleChange}\r\n                />\r\n                {this.props.auth === \"signup\" ? (\r\n                  <TextField\r\n                    label=\"Confirmar Password\"\r\n                    margin=\"normal\"\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    fullWidth\r\n                    onChange={this.handleChange}\r\n                  />\r\n                ) : null}\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  type=\"submit\"\r\n                  className=\"button\"\r\n                >\r\n                  {this.props.auth === \"login\"\r\n                    ? \"Iniciar Sesión\"\r\n                    : \"Registrarse\"}\r\n                </Button>\r\n              </form>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs>\r\n            &nbsp;\r\n          </Grid>\r\n        </Grid>\r\n        <Snackbar onClose={this.handleClose} open={open} message={message} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Auth;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Typography\n} from \"@material-ui/core\";\nimport estados from \"../../helpers/states.json\";\n\nconst CardCompany = ({ company }) => (\n  <Grid item md={3}>\n    <Card>\n      <CardContent>\n        {/*<Typography align=\"left\" color=\"textSecondary\">\n          {company.kind}\n</Typography>*/}\n        <Typography variant=\"title\" component=\"h5\">\n          {company.name ? company.name : `Lic. ${company.lawyer}`}\n        </Typography>\n        {company.number ? (\n          <Typography variant=\"subheading\" component=\"h4\">\n            Notaria No. {company.number}\n          </Typography>\n        ) : null}\n        <Typography color=\"textSecondary\">{estados[company.state]}</Typography>\n      </CardContent>\n      <CardActions>\n        <Button\n          color=\"secondary\"\n          component={Link}\n          size=\"small\"\n          to={`/company/${company._id}`}\n        >\n          Ver Mas\n        </Button>\n      </CardActions>\n    </Card>\n  </Grid>\n);\n\nexport default CardCompany;\n","export const States = [\n  { number: \"1\", value: \"Aguascalientes\" },\n  { number: \"2\", value: \"Baja California\" },\n  { number: \"3\", value: \"Baja California Sur\" },\n  { number: \"4\", value: \"Campeche\" },\n  { number: \"5\", value: \"Coahuila de Zaragoza\" },\n  { number: \"6\", value: \"Colima\" },\n  { number: \"7\", value: \"Chiapas\" },\n  { number: \"8\", value: \"Chihuahua\" },\n  { number: \"9\", value: \"Ciudad de México\" },\n  { number: \"10\", value: \"Durango\" },\n  { number: \"11\", value: \"Guanajuato\" },\n  { number: \"12\", value: \"Guerrero\" },\n  { number: \"13\", value: \"Hidalgo\" },\n  { number: \"14\", value: \"Jalisco\" },\n  { number: \"15\", value: \"México\" },\n  { number: \"16\", value: \"Michoacán de Ocampo\" },\n  { number: \"17\", value: \"Morelos\" },\n  { number: \"18\", value: \"Nayarit\" },\n  { number: \"19\", value: \"Nuevo León\" },\n  { number: \"20\", value: \"Oaxaca\" },\n  { number: \"21\", value: \"Puebla\" },\n  { number: \"22\", value: \"Querétaro\" },\n  { number: \"23\", value: \"Quintana Roo\" },\n  { number: \"24\", value: \"San Luis Potosí\" },\n  { number: \"25\", value: \"Sinaloa\" },\n  { number: \"26\", value: \"Sonora\" },\n  { number: \"27\", value: \"Tabasco\" },\n  { number: \"28\", value: \"Tamaulipas\" },\n  { number: \"29\", value: \"Tlaxcala\" },\n  { number: \"30\", value: \"Veracruz\" },\n  { number: \"31\", value: \"Yucatán\" },\n  { number: \"32\", value: \"Zacatecas\" }\n];\n\nexport default {\n  States\n};\n","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  FormControlLabel,\n  Switch,\n  TextField,\n  Button,\n  MenuItem,\n  Snackbar\n} from \"@material-ui/core\";\nimport { States } from \"../../helpers/states\";\nimport { postCompany } from \"../../service\";\n\nclass NewCompany extends Component {\n  constructor() {\n    super();\n    this.state = {\n      company: {\n        kind: \"NOTARY\",\n        state: \"\"\n      },\n      openMessage: false,\n      message: \"\"\n    };\n  }\n\n  handleChangeKind = e => {\n    const { company } = this.state;\n\n    e.target.checked ? (company.kind = \"COMPANY\") : (company.kind = \"NOTARY\");\n    this.setState({ company: company });\n  };\n\n  handleChange = e => {\n    const { company } = this.state;\n\n    let field = e.target.name;\n    company[field] = e.target.value;\n    this.setState({ company: company });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    postCompany(this.state.company).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n      setTimeout(() => {\n        this.props.history.push(`/company/${res.company}`);\n      }, 2000);\n    });\n  };\n\n  resetForm = () => {\n    let { company } = this.state;\n\n    company = {\n      kind: \"NOTARY\",\n      state: \"\"\n    };\n    this.setState({ company: company });\n  };\n\n  render() {\n    const { company, openMessage, message } = this.state;\n    const { openModal, handleClose } = this.props;\n    return (\n      <div>\n        <Dialog onClose={handleClose} open={openModal} scroll=\"body\">\n          <DialogTitle onClose={handleClose}>Nueva Compañia</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <FormControlLabel\n                control={\n                  <Switch name=\"kind\" onChange={this.handleChangeKind} />\n                }\n                label=\"Compañia\"\n              />\n              {company.kind === \"COMPANY\" ? (\n                <TextField\n                  label=\"Nombre de la Compañia\"\n                  name=\"name\"\n                  margin=\"normal\"\n                  onChange={this.handleChange}\n                  fullWidth\n                />\n              ) : null}\n              {company.kind === \"NOTARY\" ? (\n                <TextField\n                  label=\"No. Notaria\"\n                  name=\"number\"\n                  type=\"number\"\n                  margin=\"normal\"\n                  onChange={this.handleChange}\n                  fullWidth\n                />\n              ) : null}\n              {company.kind === \"NOTARY\" ? (\n                <TextField\n                  label=\"Nombre del Notario\"\n                  name=\"lawyer\"\n                  margin=\"normal\"\n                  onChange={this.handleChange}\n                  fullWidth\n                />\n              ) : null}\n              <TextField\n                select\n                label=\"Estado\"\n                name=\"state\"\n                margin=\"normal\"\n                value={company.state}\n                onChange={this.handleChange}\n                fullWidth\n              >\n                {States.map(option => (\n                  <MenuItem key={option.number} value={option.number}>\n                    {option.value}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <Button\n                className=\"buttonForm\"\n                type=\"submit\"\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Guardar\n              </Button>\n              <Button\n                className=\"buttonForm\"\n                color=\"secondary\"\n                onClick={this.resetForm}\n              >\n                Reset\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n        <Snackbar onClose={handleClose} open={openMessage} message={message} />\n      </div>\n    );\n  }\n}\n\nexport default NewCompany;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Fab,\n  Paper,\n  InputBase,\n  IconButton,\n  FormControlLabel,\n  Switch,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { Add, Search } from \"@material-ui/icons\";\n\nimport Template from \"../Card/CardCompany\";\nimport { getCompanies } from \"../../service\";\nimport NewCompany from \"../Modal/NewCompany\";\n\nclass Company extends Component {\n  constructor() {\n    super();\n    this.state = {\n      companies: [],\n      companySearch: \"\",\n      openModal: false,\n      loading: true,\n      checked: true\n    };\n  }\n\n  componentWillMount() {\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 2000);\n  }\n\n  handleClick = () => {\n    this.setState({ openModal: true });\n  };\n\n  handleClose = e => {\n    this.setState({ openModal: false });\n  };\n\n  handleChange = e => {\n    this.setState({ companySearch: e.target.value });\n  };\n\n  handleSearchCompany = e => {\n    const { companySearch, checked } = this.state;\n\n    this.setState({ loading: true });\n    getCompanies(companySearch, checked).then(res => {\n      setTimeout(() => {\n        this.setState({ companies: res.companies, loading: false });\n      }, 500);\n    });\n  };\n\n  switch = e => {\n    console.log(e.target.checked);\n    this.setState({ checked: !this.state.checked });\n  };\n\n  render() {\n    const { companies, companySearch, openModal, loading } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <Grid container spacing={16}>\n              <Grid item sm={4} />\n              <Grid item sm={3}>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.checked}\n                      onChange={this.switch}\n                    />\n                  }\n                  label=\"Notaria\"\n                />\n                <Paper elevation={1} style={{ margin: \"0 50px 30px 35px\" }}>\n                  <InputBase\n                    placeholder=\"Buscar\"\n                    margin=\"none\"\n                    onChange={this.handleChange}\n                    value={companySearch}\n                  />\n                  <IconButton\n                    aria-label=\"Buscar\"\n                    onClick={this.handleSearchCompany}\n                  >\n                    <Search />\n                  </IconButton>\n                </Paper>\n              </Grid>\n            </Grid>\n            <Grid container spacing={24}>\n              {companies.map((company, i) => (\n                <Template key={i} company={company} />\n              ))}\n              <Fab\n                className=\"fab\"\n                size=\"large\"\n                color=\"primary\"\n                onClick={this.handleClick}\n              >\n                <Add />\n              </Fab>\n            </Grid>\n            <NewCompany\n              openModal={openModal}\n              handleClose={this.handleClose}\n              {...this.props}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Company;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport { Person, Phone } from \"@material-ui/icons\";\n\nconst User = ({ user }) => (\n  <Grid spacing={32} container>\n    <Grid item sm={4} xs={false} />\n    <Grid item sm={4} xs={12}>\n      <ListItem component={Link} to={`/client/${user._id}`} button>\n        <ListItemIcon>\n          <Person />\n        </ListItemIcon>\n        <ListItemText\n          primary={`${user.name} ${\n            user.last_name === undefined ? \"\" : user.last_name\n          }`}\n        />\n        <ListItemSecondaryAction>\n          <IconButton aria-label=\"Comments\">\n            <Phone />\n          </IconButton>\n        </ListItemSecondaryAction>\n      </ListItem>\n    </Grid>\n    <Grid item sm={4} xs={false} />\n  </Grid>\n);\n\nexport default User;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  FormControlLabel,\n  Switch,\n  TextField,\n  MenuItem,\n  Button,\n  Snackbar\n} from \"@material-ui/core\";\nimport { States } from \"../../helpers/states\";\nimport { patchCompany } from \"../../service\";\n\nclass CompanyData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      company: {},\n      kind: \"NOTARY\",\n      message: \"\",\n      openMessage: false\n    };\n  }\n\n  handleChangeKind = e => {\n    const { company } = this.props;\n\n    e.target.checked ? (company.kind = \"COMPANY\") : (company.kind = \"NOTARY\");\n    this.setState({ company: company });\n  };\n\n  handleChange = e => {\n    const { company } = this.state;\n\n    let field = e.target.name;\n    company[field] = e.target.value;\n    console.log(company);\n\n    this.setState({ company: company });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { company } = this.state;\n\n    patchCompany(this.props.company._id, company).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n    });\n  };\n\n  render() {\n    const { company } = this.props;\n    const { message, openMessage } = this.state;\n\n    return (\n      <Grid spacing={32} container>\n        <Grid item sm={4} xs={false} />\n        <Grid item sm={4} xs={12}>\n          <form onSubmit={this.handleSubmit}>\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"kind\"\n                  checked={company.kind === \"COMPANY\" ? true : false}\n                  onChange={this.handleChangeKind}\n                />\n              }\n              label=\"Compañia\"\n            />\n            {company.kind === \"COMPANY\" ? (\n              <TextField\n                label=\"Nombre de la Compañia\"\n                name=\"name\"\n                margin=\"normal\"\n                defaultValue={company.name}\n                fullWidth\n                onChange={this.handleChange}\n              />\n            ) : null}\n            {company.kind === \"NOTARY\" ? (\n              <TextField\n                label=\"Nombre del Notario\"\n                name=\"lawyer\"\n                margin=\"normal\"\n                defaultValue={company.lawyer}\n                fullWidth\n                onChange={this.handleChange}\n              />\n            ) : null}\n            {company.kind === \"NOTARY\" ? (\n              <TextField\n                label=\"Numero de Notaria\"\n                name=\"number\"\n                type=\"number\"\n                margin=\"normal\"\n                defaultValue={company.number}\n                fullWidth\n                onChange={this.handleChange}\n              />\n            ) : null}\n            <TextField\n              label=\"Clave\"\n              name=\"key\"\n              margin=\"normal\"\n              defaultValue={company.key}\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              label=\"Telefono\"\n              name=\"telephone\"\n              margin=\"normal\"\n              type=\"number\"\n              defaultValue={company.telephone}\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              select\n              label=\"Estado\"\n              name=\"state\"\n              margin=\"normal\"\n              value={company.state}\n              style={{ textAlign: \"left\" }}\n              fullWidth\n              onChange={this.handleChange}\n            >\n              {States.map(option => (\n                <MenuItem key={option.number} value={option.number}>\n                  {option.value}\n                </MenuItem>\n              ))}\n            </TextField>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Guardar\n            </Button>\n          </form>\n        </Grid>\n        <Grid item sm={4} xs={false} />\n        <Snackbar open={openMessage} message={message} />\n      </Grid>\n    );\n  }\n}\n\nexport default CompanyData;\n","import React, { Component } from \"react\";\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  TableFooter,\n  TablePagination\n} from \"@material-ui/core\";\nimport moment from \"moment\";\n\nclass TableCalls extends Component {\n  constructor() {\n    super();\n    this.state = {\n      page: 0,\n      rowsPerPage: 10\n    };\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ page: 0, rowsPerPage: event.target.value });\n  };\n\n  goToCall = id => {\n    this.props.history.push(`/call/${id}`);\n  };\n\n  renderKind = kind => {\n    if (kind === \"CALL\") {\n      return \"Llamada\";\n    } else if (kind === \"SOS\") {\n      return \"S.O.S.\";\n    } else {\n      return \"Inverso\";\n    }\n  };\n\n  render() {\n    const { calls, fromCalls, viewDetails } = this.props;\n    const { page, rowsPerPage } = this.state;\n\n    return (\n      <Table>\n        <TableHead>\n          <TableRow>\n            {fromCalls ? <TableCell>Compañia</TableCell> : null}\n            {fromCalls ? <TableCell>Cliente</TableCell> : null}\n            <TableCell>Tipo de Soporte</TableCell>\n            <TableCell>Sistema</TableCell>\n            <TableCell>Consultor</TableCell>\n            {/*<TableCell>Clasificacion</TableCell>*/}\n            <TableCell>Estatus</TableCell>\n            <TableCell>Resultado</TableCell>\n            <TableCell>Fecha</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {calls\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            .map((call, i) => (\n              <TableRow\n                key={i}\n                className=\"pointer\"\n                hover\n                onClick={() => this.goToCall(call._id)}\n              >\n                {fromCalls ? (\n                  <TableCell>\n                    {call.client.company.kind === \"NOTARY\"\n                      ? call.client.company.lawyer\n                      : call.client.company.name}\n                  </TableCell>\n                ) : null}\n                {fromCalls ? (\n                  <TableCell>\n                    {call.client.name} {call.client.last_name}\n                  </TableCell>\n                ) : null}\n                <TableCell>{this.renderKind(call.kind)}</TableCell>\n                <TableCell>{call.system}</TableCell>\n                {call.prev_db ? (\n                  <TableCell>{call.prev_db_user}</TableCell>\n                ) : (\n                  <TableCell>\n                    {call.user.name} {call.user.last_name}\n                  </TableCell>\n                )}\n                {/*<TableCell>{call.classification}</TableCell>*/}\n                <TableCell>\n                  {call.status === \"FINALIZED\" ? \"Finalizada\" : \"Pendiente\"}\n                </TableCell>\n                <TableCell>\n                  {call.ending === \"UNPRODUCTIVE\"\n                    ? \"Improductiva\"\n                    : \"Productiva\"}\n                </TableCell>\n                <TableCell>{moment(call.created_at).format(\"ll\")}</TableCell>\n              </TableRow>\n            ))}\n\n          {viewDetails ? (\n            <TableRow>\n              <TableCell align=\"right\" colSpan={fromCalls ? 7 : 5}>\n                Total de llamadas:\n              </TableCell>\n              <TableCell align=\"center\">{calls.length}</TableCell>\n            </TableRow>\n          ) : null}\n\n          {viewDetails ? (\n            <TableRow>\n              <TableCell align=\"right\" colSpan={fromCalls ? 7 : 5}>\n                Pendientes:{\" \"}\n                {calls.filter(call => call.status === \"PENDING\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                Finalizadas:{\" \"}\n                {calls.filter(call => call.status === \"FINALIZED\").length}\n              </TableCell>\n            </TableRow>\n          ) : null}\n\n          {viewDetails ? (\n            <TableRow>\n              <TableCell align=\"right\" colSpan={fromCalls ? 6 : 4}>\n                Llamadas: {calls.filter(call => call.kind === \"CALL\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                S.O.S.: {calls.filter(call => call.kind === \"SOS\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                Inverso: {calls.filter(call => call.kind === \"REVERSE\").length}\n              </TableCell>\n            </TableRow>\n          ) : null}\n\n          {viewDetails ? (\n            <TableRow>\n              <TableCell align=\"center\" colSpan={fromCalls ? 2 : 0}>\n                Minotaria:{\" \"}\n                {calls.filter(call => call.system === \"MINOTARIA\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                Calculofacil:{\" \"}\n                {calls.filter(call => call.system === \"CALCULOFACIL\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                ListasPB:{\" \"}\n                {calls.filter(call => call.system === \"LISTASPB\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                CFDI: {calls.filter(call => call.system === \"CFDI\").length}\n              </TableCell>\n              <TableCell align=\"center\">\n                UIF: {calls.filter(call => call.system === \"UIF\").length}\n              </TableCell>\n              <TableCell align=\"center\" colSpan={fromCalls ? 2 : 0}>\n                Racoo Notarios:{\" \"}\n                {calls.filter(call => call.system === \"RACOO NOTARIOS\").length}\n              </TableCell>\n            </TableRow>\n          ) : null}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 50, 100]}\n              colSpan={7}\n              count={calls.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onChangePage={this.handleChangePage}\n              onChangeRowsPerPage={this.handleChangeRowsPerPage}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    );\n  }\n}\n\nexport default TableCalls;\n","import React, { Component } from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\nimport TableCalls from \"../Tables/TableCalls\";\n\nclass CompanyCalls extends Component {\n  constructor() {\n    super();\n    this.state = {\n      calls: [],\n      fromCalls: false\n    };\n  }\n\n  componentWillMount() {\n    const { company } = this.props;\n    let calls = company.calls.sort(\n      (a, b) =>\n        new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n    );\n    this.setState({ calls: calls });\n  }\n\n  render() {\n    const { calls, fromCalls } = this.state;\n    console.log(this.props);\n\n    return (\n      <Grid container spacing={24}>\n        {calls.length <= 0 ? (\n          <Typography align=\"center\" variant=\"h4\" style={{ width: \"100%\" }}>\n            Sin llamadas\n          </Typography>\n        ) : (\n          <Paper style={{ width: \"100%\" }}>\n            <TableCalls calls={calls} fromCalls={fromCalls} {...this.props} />\n          </Paper>\n        )}\n      </Grid>\n    );\n  }\n}\n\nexport default CompanyCalls;\n","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Button,\n  Snackbar\n} from \"@material-ui/core\";\n//import Select from \"react-select\";\nimport { postClient } from \"../../service\";\n\nclass NewClient extends Component {\n  constructor() {\n    super();\n    this.state = {\n      client: {\n        name: \"\",\n        last_name: \"\"\n      },\n      openMessage: false,\n      message: \"\"\n    };\n  }\n\n  componentWillMount() {\n    let { client } = this.state;\n    client.company = this.props.company._id;\n    this.setState({ client });\n  }\n\n  handleChange = e => {\n    const { client } = this.state;\n\n    let field = e.target.name;\n    client[field] = e.target.value;\n    console.log(client);\n\n    this.setState({ client: client });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    postClient(this.state.client).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n      setTimeout(() => {\n        this.props.history.push(`/client/${res.client}`);\n      }, 2000);\n    });\n  };\n\n  resetForm = () => {\n    let { client } = this.state;\n\n    client = {\n      company: this.props.company._id,\n      name: \"\",\n      last_name: \"\"\n    };\n    this.setState({ client: client });\n  };\n\n  render() {\n    const { client, openMessage, message } = this.state;\n    const { openModal, handleClose, company } = this.props;\n\n    return (\n      <div>\n        <Dialog onClose={handleClose} open={openModal} scroll=\"body\">\n          <DialogTitle onClose={handleClose}>Nuevo Cliente</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                label=\"Compañia\"\n                value={\n                  company.kind === \"NOTARY\"\n                    ? `Notaria ${company.number}`\n                    : `${company.name}`\n                }\n                margin=\"normal\"\n                fullWidth\n                disabled\n              />\n              <TextField\n                label=\"Nombre\"\n                name=\"name\"\n                margin=\"normal\"\n                value={\n                  client.last_name === undefined || client.last_name\n                    ? `${client.name}`\n                    : `${client.name} ${client.last_name}`\n                }\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                label=\"Apellido\"\n                name=\"last_name\"\n                margin=\"normal\"\n                value={client.last_name}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <Button\n                className=\"buttonForm\"\n                type=\"submit\"\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Guardar\n              </Button>\n              <Button\n                className=\"buttonForm\"\n                color=\"secondary\"\n                onClick={this.resetForm}\n              >\n                Reset\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n        <Snackbar onClose={handleClose} open={openMessage} message={message} />\n      </div>\n    );\n  }\n}\n\nexport default NewClient;\n","import React, { Component } from \"react\";\nimport {\n  AppBar,\n  Tabs,\n  Tab,\n  Fab,\n  Typography,\n  CircularProgress,\n  List\n} from \"@material-ui/core\";\nimport {\n  Add,\n  AssignmentTwoTone,\n  PhoneTwoTone,\n  PeopleTwoTone\n} from \"@material-ui/icons\";\nimport User from \"./ListUsers\";\nimport CompanyData from \"./CompanyData\";\nimport CompanyCalls from \"./CompanyCalls\";\nimport { getCompanyId } from \"../../service\";\nimport NewClient from \"../Modal/NewClient\";\n\nclass CompanyDetail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      company: [],\n      value: 1,\n      loading: true,\n      openModal: false\n    };\n  }\n\n  componentWillMount() {\n    let id = this.props.match.params.id;\n    getCompanyId(id).then(res => {\n      setTimeout(() => {\n        this.setState({ company: res.company, loading: false });\n      }, 3000);\n    });\n  }\n\n  handleClick = () => {\n    this.setState({ openModal: true });\n  };\n\n  handleClose = e => {\n    this.setState({ openModal: false });\n  };\n\n  handleChange = (e, value) => {\n    this.setState({ value: value });\n  };\n\n  render() {\n    const { company, value, loading, openModal } = this.state;\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <Typography variant=\"h3\">\n              {company.kind === \"NOTARY\"\n                ? `Lic. ${company.lawyer}`\n                : company.name}\n            </Typography>\n            {company.kind === \"NOTARY\" ? (\n              <Typography variant=\"h5\">\n                {\" \"}\n                Notaria No. {company.number}\n              </Typography>\n            ) : null}\n            <AppBar position=\"static\" color=\"default\" className=\"marginTabs\">\n              <Tabs\n                value={value}\n                onChange={this.handleChange}\n                indicatorColor=\"secondary\"\n                textColor=\"inherit\"\n                centered\n              >\n                <Tab icon={<AssignmentTwoTone />} label=\"Datos\" />\n                <Tab icon={<PeopleTwoTone />} label=\"Usuarios\" />\n                <Tab icon={<PhoneTwoTone />} label=\"Llamadas\" />\n              </Tabs>\n            </AppBar>\n\n            {value === 0 && (\n              <div>\n                <CompanyData company={company} />\n              </div>\n            )}\n            {value === 1 && (\n              <List component=\"nav\">\n                {company.clients.map((user, i) => (\n                  <User key={i} user={user} />\n                ))}\n              </List>\n            )}\n            {value === 2 && (\n              <div>\n                <CompanyCalls company={company} {...this.props} />\n              </div>\n            )}\n\n            <Fab\n              className=\"fab\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={this.handleClick}\n            >\n              <Add />\n            </Fab>\n            <NewClient\n              openModal={openModal}\n              handleClose={this.handleClose}\n              company={company}\n              {...this.props}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CompanyDetail;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Grid,\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Typography\n} from \"@material-ui/core\";\n\nconst CardClient = ({ client }) => (\n  <Grid item md={3}>\n    <Card>\n      <CardContent>\n        <Typography variant=\"title\" component=\"h5\">\n          {client.name} {client.last_name}\n        </Typography>\n        {\n          <Typography color=\"textSecondary\">\n            {client.company.kind === \"NOTARY\"\n              ? `Notaria No. ${client.company.number}`\n              : `${client.company.name}`}\n          </Typography>\n        }\n        {/*company.number ? (\n          <Typography variant=\"subheading\" component=\"h4\">\n            Notaria No. {company.number}\n          </Typography>\n        ) : null*/}\n      </CardContent>\n      <CardActions>\n        <Button\n          color=\"secondary\"\n          component={Link}\n          size=\"small\"\n          to={`/client/${client._id}`}\n        >\n          Ver Mas\n        </Button>\n      </CardActions>\n    </Card>\n  </Grid>\n);\n\nexport default CardClient;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Paper,\n  InputBase,\n  IconButton,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { getClients } from \"../../service\";\n\nimport CardClient from \"../Card/CardClient\";\n\nclass Client extends Component {\n  constructor() {\n    super();\n    this.state = {\n      clients: [],\n      clientSearch: \"\",\n      filtered: [],\n      loading: true\n    };\n  }\n\n  componentWillMount() {\n    setTimeout(() => {\n      this.setState({ loading: false });\n    }, 2000);\n  }\n\n  handleChange = e => {\n    this.setState({ clientSearch: e.target.value });\n  };\n\n  handleSearchClient = e => {\n    const { clientSearch } = this.state;\n\n    this.setState({ loading: true });\n    getClients(clientSearch).then(res => {\n      setTimeout(() => {\n        this.setState({ clients: res.clients, loading: false });\n      }, 500);\n    });\n  };\n\n  render() {\n    const { clients, clientSearch, loading } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <Grid container spacing={16}>\n              <Grid item sm={4} />\n              <Grid item sm={3}>\n                <Paper elevation={1} style={{ margin: \"0 50px 30px 35px\" }}>\n                  <InputBase\n                    placeholder=\"Buscar\"\n                    margin=\"none\"\n                    value={clientSearch}\n                    onChange={this.handleChange}\n                  />\n                  <IconButton\n                    aria-label=\"Buscar\"\n                    onClick={this.handleSearchClient}\n                  >\n                    <Search />\n                  </IconButton>\n                </Paper>\n              </Grid>\n            </Grid>\n            <Grid container spacing={24}>\n              {clients.map((client, i) => (\n                <CardClient key={i} client={client} />\n              ))}\n            </Grid>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Client;\n","export const Positions = [\n  \"abogado\",\n  \"abogado_carpeta\",\n  \"ACHICHINCLE\",\n  \"alertas_uif\",\n  \"archivo\",\n  \"asistente\",\n  \"asistente de porteria\",\n  \"autos\",\n  \"caja\",\n  \"caja_abogado\",\n  \"caja_admin\",\n  \"caja_conciliar\",\n  \"caja_contador\",\n  \"caja_movimientos\",\n  \"caja_notario\",\n  \"caja_tarjetas\",\n  \"caja_vales\",\n  \"Cumplañero\",\n  \"cumpleaños\",\n  \"decenas\",\n  \"ditto\",\n  \"escrituras\",\n  \"expedientes_uif\",\n  \"gestor\",\n  \"gestores df\",\n  \"gestores foraneos\",\n  \"Hoy\",\n  \"IBM\",\n  \"indices\",\n  \"Mesa de Control\",\n  \"notario\",\n  \"Notario_V\",\n  \"pas calle\",\n  \"pas primera\",\n  \"pas registro\",\n  \"pas segunda\",\n  \"pasante\",\n  \"remoto\",\n  \"sec previos\",\n  \"sec protocolo\",\n  \"Sec Recepcion\",\n  \"sistemas\",\n  \"subir_archivos\",\n  \"_rfc\"\n];\n\nexport default {\n  Positions\n};\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  TextField,\n  MenuItem,\n  FormControl,\n  InputLabel,\n  Select,\n  Input,\n  Chip,\n  Button,\n  Snackbar\n} from \"@material-ui/core\";\n\nimport { getCompanies, patchClient } from \"../../service\";\nimport Positions from \"../../helpers/positions\";\n\nclass ClientData extends Component {\n  constructor() {\n    super();\n    this.state = {\n      companies: [],\n      client: {},\n      message: \"\",\n      openMessage: false\n    };\n  }\n\n  componentWillMount() {\n    getCompanies().then(res => {\n      this.setState({ companies: res.companies });\n    });\n  }\n\n  handleChange = e => {\n    const { client } = this.state;\n\n    let field = e.target.name;\n    client[field] = e.target.value;\n    console.log(client);\n\n    this.setState({ client: client });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { client } = this.state;\n\n    patchClient(this.props.client._id, client).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n    });\n  };\n\n  render() {\n    const { client } = this.props;\n    const { companies, message, openMessage } = this.state;\n\n    return (\n      <Grid spacing={32} container>\n        <Grid item sm={4} xs={false} />\n        <Grid item sm={4} xs={12}>\n          <form onSubmit={this.handleSubmit}>\n            <TextField\n              label=\"Nombre\"\n              name=\"name\"\n              margin=\"normal\"\n              defaultValue={client.name}\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              label=\"Apellido\"\n              name=\"last_name\"\n              margin=\"normal\"\n              defaultValue={client.last_name}\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              select\n              label=\"Compañia\"\n              name=\"company\"\n              margin=\"normal\"\n              value={client.company._id}\n              style={{ textAlign: \"left\" }}\n              fullWidth\n              onChange={this.handleChange}\n            >\n              {companies.map((option, i) => (\n                <MenuItem key={i} value={option._id}>\n                  {option.kind === \"NOTARY\"\n                    ? `Notaria ${option.number}`\n                    : `${option.name}`}\n                </MenuItem>\n              ))}\n            </TextField>\n\n            <FormControl\n              variant=\"outlined\"\n              fullWidth\n              onChange={this.handleChange}\n            >\n              <InputLabel htmlFor=\"select-multiple-chip\">Puestos</InputLabel>\n              <Select\n                multiple\n                name=\"positions\"\n                onChange={this.handleChange}\n                value={client.positions}\n                input={<Input id=\"select-multiple-chip\" />}\n                renderValue={selected => (\n                  <div className=\"chipsPositions\">\n                    {selected.map(value => (\n                      <Chip\n                        key={value}\n                        label={value}\n                        color=\"primary\"\n                        style={{ margin: \"0 2.5px\" }}\n                      />\n                    ))}\n                  </div>\n                )}\n              >\n                {Positions.Positions.map(name => (\n                  <MenuItem key={name} value={name}>\n                    {name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <TextField\n              label=\"Telefono\"\n              name=\"telephone\"\n              margin=\"normal\"\n              type=\"number\"\n              defaultValue={client.telephone}\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              label=\"Extension\"\n              name=\"extension\"\n              margin=\"normal\"\n              type=\"number\"\n              defaultValue={client.extension}\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <TextField\n              label=\"Descripcion\"\n              name=\"description\"\n              margin=\"normal\"\n              defaultValue={client.description}\n              multiline\n              rowsMax=\"4\"\n              fullWidth\n              onChange={this.handleChange}\n            />\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Guardar\n            </Button>\n          </form>\n        </Grid>\n        <Grid item sm={4} xs={false} />\n        <Snackbar open={openMessage} message={message} />\n      </Grid>\n    );\n  }\n}\n\nexport default ClientData;\n","import React, { Component } from \"react\";\nimport { Grid, Paper, Typography } from \"@material-ui/core\";\n\nimport TableCalls from \"../Tables/TableCalls\";\n\nclass ClientCalls extends Component {\n  constructor() {\n    super();\n    this.state = {\n      calls: [],\n      fromCalls: false,\n      openModal: false\n    };\n  }\n\n  componentWillMount() {\n    const { client } = this.props;\n    let calls = client.calls.sort(\n      (a, b) =>\n        new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n    );\n    this.setState({ calls: calls });\n  }\n\n  render() {\n    const { calls, fromCalls } = this.state;\n\n    return (\n      <div>\n        <Grid container spacing={24}>\n          {calls.length <= 0 ? (\n            <Typography align=\"center\" variant=\"h4\" style={{ width: \"100%\" }}>\n              Sin llamadas\n            </Typography>\n          ) : (\n            <Paper style={{ width: \"100%\" }}>\n              <TableCalls calls={calls} fromCalls={fromCalls} {...this.props} />\n            </Paper>\n          )}\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default ClientCalls;\n","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  Button,\n  Snackbar\n} from \"@material-ui/core\";\n//import Select from \"react-select\";\nimport { postCall } from \"../../service\";\n\nclass NewCall extends Component {\n  constructor() {\n    super();\n    this.state = {\n      call: {\n        company: \"\",\n        client: \"\",\n        kind: \"\",\n        system: \"\",\n        problem: \"\",\n        user: \"\"\n      },\n      openMessage: false,\n      message: \"\",\n      companies: [],\n      listClients: []\n    };\n  }\n\n  componentWillMount() {\n    let { call } = this.state;\n\n    call.company = this.props.client.company._id;\n    call.client = this.props.client._id;\n    call.user = JSON.parse(localStorage.getItem(\"user\"))._id;\n\n    this.setState({ call: call });\n  }\n\n  handleChange = e => {\n    const { call } = this.state;\n\n    let field = e.target.name;\n    call[field] = e.target.value;\n    console.log(call);\n\n    this.setState({ call: call });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    postCall(this.state.call).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n      setTimeout(() => {\n        this.props.history.push(`/call/${res.call}`);\n      }, 2000);\n    });\n  };\n\n  resetForm = () => {\n    let { call } = this.state;\n\n    call = {\n      company: this.props.client.company._id,\n      client: this.props.client._id,\n      kind: \"\",\n      system: \"\",\n      problem: \"\",\n      user: JSON.parse(localStorage.getItem(\"user\"))._id\n    };\n    this.setState({ call: call });\n  };\n\n  render() {\n    const { call, openMessage, message } = this.state;\n    const { openModal, handleClose, client } = this.props;\n    console.log(call);\n\n    return (\n      <div>\n        <Dialog onClose={handleClose} open={openModal} scroll=\"body\">\n          <DialogTitle onClose={handleClose}>Nueva Llamada</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <TextField\n                label=\"Compañia\"\n                value={\n                  client.company.kind === \"NOTARY\"\n                    ? `Notaria ${client.company.number}`\n                    : `${client.company.name}`\n                }\n                margin=\"normal\"\n                fullWidth\n                disabled\n              />\n              <TextField\n                label=\"Cliente\"\n                value={`${client.name} ${client.last_name}`}\n                margin=\"normal\"\n                fullWidth\n                disabled\n              />\n\n              <FormLabel component=\"legend\" className=\"labelsRadios\">\n                Tipo de Soporte\n              </FormLabel>\n              <RadioGroup\n                aria-label=\"kind\"\n                name=\"kind\"\n                onChange={this.handleChange}\n                value={call.kind}\n                row={true}\n              >\n                <FormControlLabel\n                  value=\"CALL\"\n                  control={<Radio />}\n                  label=\"Llamada\"\n                />\n                <FormControlLabel value=\"SOS\" control={<Radio />} label=\"SOS\" />\n                <FormControlLabel\n                  value=\"REVERSE\"\n                  control={<Radio />}\n                  label=\"Inverso\"\n                />\n              </RadioGroup>\n\n              <FormLabel component=\"legend\" className=\"labelsRadios\">\n                Sistema\n              </FormLabel>\n              <RadioGroup\n                aria-label=\"system\"\n                name=\"system\"\n                onChange={this.handleChange}\n                value={call.system}\n                row={true}\n              >\n                <FormControlLabel\n                  value=\"MINOTARIA\"\n                  control={<Radio />}\n                  label=\"MiNotaria\"\n                />\n                <FormControlLabel\n                  value=\"CALCULOFACIL\"\n                  control={<Radio />}\n                  label=\"CalculoFacil\"\n                />\n                <FormControlLabel\n                  value=\"LISTASPB\"\n                  control={<Radio />}\n                  label=\"ListasPB\"\n                />\n                <FormControlLabel\n                  value=\"CFDI\"\n                  control={<Radio />}\n                  label=\"CFDI\"\n                />\n                <FormControlLabel value=\"UIF\" control={<Radio />} label=\"UIF\" />\n                <FormControlLabel\n                  value=\"RACOO NOTARIOS\"\n                  control={<Radio />}\n                  label=\"Racoo Notarios\"\n                />\n              </RadioGroup>\n\n              <TextField\n                multiline\n                rows=\"4\"\n                label=\"Problema\"\n                name=\"problem\"\n                margin=\"normal\"\n                onChange={this.handleChange}\n                value={call.problem}\n                fullWidth\n              />\n              <Button\n                className=\"buttonForm\"\n                type=\"submit\"\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Guardar\n              </Button>\n              <Button\n                className=\"buttonForm\"\n                color=\"secondary\"\n                onClick={this.resetForm}\n              >\n                Reset\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n        <Snackbar onClose={handleClose} open={openMessage} message={message} />\n      </div>\n    );\n  }\n}\n\nexport default NewCall;\n","import React, { Component } from \"react\";\nimport {\n  AppBar,\n  Tabs,\n  Tab,\n  Fab,\n  Typography,\n  CircularProgress\n} from \"@material-ui/core\";\nimport { Add, AssignmentTwoTone, PhoneTwoTone } from \"@material-ui/icons\";\nimport { getClientId } from \"../../service\";\nimport ClientData from \"./ClientData\";\nimport ClientCalls from \"./ClientCalls\";\nimport NewCall from \"../Modal/NewCall\";\n\nclass ClientDetail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      client: [],\n      value: 1,\n      loading: true,\n      openModal: false\n    };\n  }\n\n  componentWillMount() {\n    let id = this.props.match.params.id;\n    getClientId(id).then(res => {\n      setTimeout(() => {\n        this.setState({ client: res.client, loading: false });\n      }, 3000);\n    });\n  }\n\n  handleClick = () => {\n    this.setState({ openModal: true });\n  };\n\n  handleClose = e => {\n    this.setState({ openModal: false });\n  };\n\n  handleChange = (e, value) => {\n    this.setState({ value: value });\n  };\n\n  render() {\n    const { client, value, loading, openModal } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <Typography variant=\"h3\">\n              {client.name} {client.last_name}\n            </Typography>\n            <AppBar position=\"static\" color=\"default\" className=\"marginTabs\">\n              <Tabs\n                value={value}\n                onChange={this.handleChange}\n                indicatorColor=\"secondary\"\n                textColor=\"inherit\"\n                centered\n              >\n                <Tab icon={<AssignmentTwoTone />} label=\"Datos\" />\n                <Tab icon={<PhoneTwoTone />} label=\"Llamadas\" />\n              </Tabs>\n            </AppBar>\n\n            {value === 0 && (\n              <div>\n                <ClientData client={client} />\n              </div>\n            )}\n            {value === 1 && (\n              <div>\n                <ClientCalls client={client} {...this.props} />\n              </div>\n            )}\n            <Fab\n              className=\"fab\"\n              size=\"large\"\n              color=\"primary\"\n              onClick={this.handleClick}\n            >\n              <Add />\n            </Fab>\n            <NewCall\n              client={client}\n              openModal={openModal}\n              handleClose={this.handleClose}\n              {...this.props}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ClientDetail;\n","import React, { Component } from \"react\";\nimport {\n  Grid,\n  Paper,\n  CircularProgress,\n  IconButton,\n  FormControlLabel,\n  Switch\n} from \"@material-ui/core\";\nimport { Search } from \"@material-ui/icons\";\nimport { InlineDatePicker } from \"material-ui-pickers\";\nimport moment from \"moment\";\n\nimport TableCalls from \"../Tables/TableCalls\";\nimport { getCalls } from \"../../service\";\n\nclass Call extends Component {\n  constructor() {\n    super();\n    this.state = {\n      calls: [],\n      dates: {\n        init: \"\",\n        fin: \"\"\n      },\n      openModal: false,\n      loading: true,\n      fromCalls: true,\n      viewDetails: false\n    };\n  }\n\n  componentWillMount() {\n    let initDate = moment(new Date()).format(\"YYYY-MM-DD\");\n    let finDate = moment(new Date()).format(\"YYYY-MM-DD\");\n\n    getCalls(\n      initDate,\n      moment(finDate)\n        .add(1, \"days\")\n        .format(\"YYYY-MM-DD\")\n    ).then(res => {\n      let calls = res.calls.sort(\n        (a, b) =>\n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n      );\n\n      let dates = {\n        init: initDate,\n        fin: finDate\n      };\n\n      setTimeout(() => {\n        this.setState({\n          calls: calls,\n          dates: dates,\n          loading: false\n        });\n      }, 3000);\n    });\n  }\n\n  handleClick = () => {\n    this.setState({ openModal: true });\n  };\n\n  handleClose = e => {\n    this.setState({ openModal: false });\n  };\n\n  handleChangeDate = (date, name) => {\n    const { dates } = this.state;\n\n    let field = name;\n    dates[field] = date._d;\n\n    this.setState({ dates });\n  };\n\n  handleSearch = e => {\n    const { dates } = this.state;\n    let initDate = moment(dates.init).format(\"YYYY-MM-DD\");\n    let finDate = moment(dates.fin).format(\"YYYY-MM-DD\");\n\n    getCalls(\n      initDate,\n      moment(finDate)\n        .add(1, \"days\")\n        .format(\"YYYY-MM-DD\")\n    ).then(res => {\n      let calls = res.calls.sort(\n        (a, b) =>\n          new Date(b.created_at).getTime() - new Date(a.created_at).getTime()\n      );\n      this.setState({ calls: calls });\n    });\n  };\n\n  handleViewDetails = e => {\n    const { viewDetails } = this.state;\n\n    this.setState({ viewDetails: !viewDetails });\n  };\n\n  render() {\n    const { calls, loading, fromCalls, dates, viewDetails } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <Grid container spacing={24}>\n            <Grid item sm={3} />\n            <Grid item sm={6}>\n              <InlineDatePicker\n                keyboard\n                variant=\"outlined\"\n                label=\"Fecha Inicial\"\n                value={dates.init}\n                format=\"DD/MM/YYYY\"\n                style={{ margin: \"0 1%\" }}\n                onChange={e => this.handleChangeDate(e, \"init\")}\n              />\n              <InlineDatePicker\n                keyboard\n                variant=\"outlined\"\n                label=\"Fecha Final\"\n                value={dates.fin}\n                format=\"DD/MM/YYYY\"\n                style={{ margin: \"0 1%\" }}\n                onChange={e => this.handleChangeDate(e, \"fin\")}\n              />\n              <IconButton\n                name=\"search\"\n                aria-label=\"Search\"\n                onClick={this.handleSearch}\n              >\n                <Search />\n              </IconButton>\n            </Grid>\n            <Grid item sm={1} />\n            <Grid item sm={2}>\n              <FormControlLabel\n                control={<Switch onChange={this.handleViewDetails} />}\n                label=\"Ver Detalles\"\n              />\n            </Grid>\n            <Paper style={{ width: \"100%\" }}>\n              <TableCalls\n                calls={calls}\n                fromCalls={fromCalls}\n                viewDetails={viewDetails}\n                {...this.props}\n              />\n            </Paper>\n          </Grid>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Call;\n","import React, { Component } from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  TextField,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  FormControl,\n  InputLabel,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button,\n  Snackbar\n} from \"@material-ui/core\";\nimport Selectv2 from \"react-select\";\nimport moment from \"moment\";\n\nimport { getCallId, patchCallId, getClients } from \"../../service\";\n\nclass CallDetail extends Component {\n  constructor() {\n    super();\n    this.state = {\n      call: {},\n      clients: [],\n      loading: true,\n      message: \"\",\n      openMessage: false\n    };\n  }\n\n  componentWillMount() {\n    const { match } = this.props;\n    getCallId(match.params.id).then(res => {\n      this.setState({ call: res.call });\n    });\n\n    getClients(\"\").then(res => {\n      res.clients.forEach(client => {\n        client.value = client._id;\n        client.company.number\n          ? (client.label = `${client.name} (Notaria ${client.company.number})`)\n          : (client.label = `${client.name} (${client.company.name})`);\n      });\n\n      setTimeout(() => {\n        this.setState({ clients: res.clients, loading: false });\n      }, 500);\n    });\n  }\n\n  handleSelect = e => {\n    const { call } = this.state;\n\n    call.client = e._id;\n    call.company = e.company._id;\n\n    this.setState({ call: call });\n  };\n\n  handleChange = e => {\n    const { call } = this.state;\n\n    let field = e.target.name;\n    call[field] = e.target.value;\n\n    this.setState({ call: call });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { call } = this.state;\n    call.user = JSON.parse(localStorage.getItem(\"user\"))._id;\n\n    let record = {\n      user: JSON.parse(localStorage.getItem(\"user\")).name,\n      update: moment().format()\n    };\n    call.record.push(record);\n\n    patchCallId(call._id, call).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n      setTimeout(() => {\n        this.props.history.push(`/calls`);\n      }, 500);\n    });\n  };\n\n  render() {\n    const { call, clients, loading, message, openMessage } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <div>\n              <h1 style={{ margin: \"0\" }}>{call.client.name}</h1>\n              <h4 style={{ marginTop: \"0\" }}>{call.client.company.key}</h4>\n              <p>{moment(call.created_at).format(\"LLLL\")}</p>\n            </div>\n            <form onSubmit={this.handleSubmit}>\n              <Grid container spacing={24}>\n                <Grid item sm={4}>\n                  <Selectv2\n                    className=\"text-left\"\n                    defaultValue={call.client._id}\n                    placeholder=\"Cliente\"\n                    isSearchable\n                    name=\"client\"\n                    options={clients}\n                    onChange={this.handleSelect}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={24}>\n                <Grid item sm={6}>\n                  <TextField\n                    label=\"Problema\"\n                    name=\"problem\"\n                    multiline\n                    rows=\"5\"\n                    defaultValue={call.problem}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={this.handleChange}\n                  />\n                </Grid>\n                <Grid item sm={6}>\n                  <TextField\n                    label=\"Solución\"\n                    name=\"solution\"\n                    multiline\n                    rows=\"5\"\n                    defaultValue={call.solution}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={this.handleChange}\n                  />\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={24}>\n                <Grid item sm={2}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-system-simple\">\n                      Sistema\n                    </InputLabel>\n                    <Select\n                      align=\"left\"\n                      name=\"system\"\n                      value={call.system}\n                      onChange={this.handleChange}\n                      input={\n                        <OutlinedInput\n                          labelWidth={60}\n                          name=\"system\"\n                          id=\"outlined-system-simple\"\n                        />\n                      }\n                    >\n                      <MenuItem value=\"MINOTARIA\">Minotaria</MenuItem>\n                      <MenuItem value=\"CALCULOFACIL\">Caculofacil</MenuItem>\n                      <MenuItem value=\"LISTASPB\">ListasPB</MenuItem>\n                      <MenuItem value=\"CFDI\">CFDI</MenuItem>\n                      <MenuItem value=\"UIF\">UIF</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item sm={1} />\n\n                <Grid item sm={2}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-kind-simple\">\n                      Tipo de Soporte\n                    </InputLabel>\n                    <Select\n                      align=\"left\"\n                      name=\"kind\"\n                      value={call.kind}\n                      onChange={this.handleChange}\n                      input={\n                        <OutlinedInput\n                          labelWidth={120}\n                          name=\"kind\"\n                          id=\"outlined-kind-simple\"\n                        />\n                      }\n                    >\n                      <MenuItem value=\"CALL\">Llamada</MenuItem>\n                      <MenuItem value=\"SOS\">S.O.S.</MenuItem>\n                      <MenuItem value=\"REVERSE\">Inverso</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n                <Grid item sm={1} />\n                <Grid item sm={3}>\n                  <FormLabel component=\"legend\" align=\"left\">\n                    Estatus:\n                  </FormLabel>\n                  <RadioGroup\n                    aria-label=\"status\"\n                    name=\"status\"\n                    defaultValue={call.status}\n                    onChange={this.handleChange}\n                    row={true}\n                  >\n                    <FormControlLabel\n                      value=\"PENDING\"\n                      control={<Radio />}\n                      label=\"Pendiente\"\n                    />\n                    <FormControlLabel\n                      value=\"FINALIZED\"\n                      control={<Radio />}\n                      label=\"Finalizada\"\n                    />\n                  </RadioGroup>\n                </Grid>\n\n                <Grid item sm={3}>\n                  <FormLabel component=\"legend\" align=\"left\">\n                    Resultado:\n                  </FormLabel>\n                  <RadioGroup\n                    aria-label=\"ending\"\n                    name=\"ending\"\n                    defaultValue={call.ending}\n                    onChange={this.handleChange}\n                    row={true}\n                  >\n                    <FormControlLabel\n                      value=\"PRODUCTIVE\"\n                      control={<Radio />}\n                      label=\"Productiva\"\n                    />\n                    <FormControlLabel\n                      value=\"UNPRODUCTIVE\"\n                      control={<Radio />}\n                      label=\"Improductiva\"\n                    />\n                  </RadioGroup>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={24}>\n                <ul className=\"list-records\">\n                  {call.record.map((user, i) => (\n                    <li key={i}>\n                      {user.user} - {moment(user.update).format(\"llll\")}\n                    </li>\n                  ))}\n                </ul>\n              </Grid>\n\n              <Grid container spacing={24}>\n                <Grid item sm={12}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Guardar\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n            <Snackbar open={openMessage} message={message} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CallDetail;\n","import React, { Component } from \"react\";\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  TextField,\n  Button,\n  Snackbar\n} from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport { getAllCompanies, postClient } from \"../../service\";\n\nclass NewClient extends Component {\n  constructor() {\n    super();\n    this.state = {\n      client: {\n        name: \"\",\n        extension: \"\",\n        positions: \"\",\n        description: \"\"\n      },\n      companies: [],\n      openMessage: false,\n      message: \"\"\n    };\n  }\n\n  componentWillMount() {\n    getAllCompanies().then(res => {\n      res.companies.forEach(company => {\n        company.value = company._id;\n        company.label = company.key;\n      });\n\n      setTimeout(() => {\n        this.setState({ companies: res.companies, loading: false });\n      }, 500);\n    });\n  }\n\n  handleSelect = e => {\n    const { client } = this.state;\n\n    client.company = e._id;\n\n    this.setState({ client: client });\n  };\n\n  handleChange = e => {\n    const { client } = this.state;\n\n    let field = e.target.name;\n    client[field] = e.target.value;\n\n    this.setState({ client: client });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    postClient(this.state.client).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n      setTimeout(() => {\n        this.props.history.push(`/call`);\n      }, 1000);\n    });\n  };\n\n  resetForm = () => {\n    let { client } = this.state;\n\n    client = {\n      name: \"\",\n      extension: \"\",\n      positions: \"\",\n      description: \"\"\n    };\n    this.setState({ client: client });\n  };\n\n  render() {\n    const { client, companies, openMessage, message } = this.state;\n    const { openModal, handleClose } = this.props;\n\n    return (\n      <div>\n        <Dialog onClose={handleClose} open={openModal} scroll=\"body\">\n          <DialogTitle onClose={handleClose}>Nuevo Cliente</DialogTitle>\n          <DialogContent>\n            <form onSubmit={this.handleSubmit}>\n              <Select\n                className=\"text-left\"\n                defaultValue={client.company}\n                placeholder=\"Compañia\"\n                isSearchable\n                name=\"company\"\n                options={companies}\n                onChange={this.handleSelect}\n              />\n              <TextField\n                label=\"Nombre\"\n                name=\"name\"\n                margin=\"normal\"\n                value={client.name}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                label=\"Puestos\"\n                name=\"positions\"\n                margin=\"normal\"\n                value={client.positions}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                label=\"Extensión\"\n                name=\"extension\"\n                margin=\"normal\"\n                type=\"number\"\n                value={client.extension}\n                onChange={this.handleChange}\n                fullWidth\n              />\n              <TextField\n                label=\"Descripción\"\n                name=\"description\"\n                margin=\"normal\"\n                defaultValue={client.description}\n                multiline\n                rowsMax=\"4\"\n                fullWidth\n                onChange={this.handleChange}\n              />\n              <Button\n                className=\"buttonForm\"\n                type=\"submit\"\n                onClick={handleClose}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Guardar\n              </Button>\n              <Button\n                className=\"buttonForm\"\n                color=\"secondary\"\n                onClick={this.resetForm}\n              >\n                Reset\n              </Button>\n            </form>\n          </DialogContent>\n        </Dialog>\n        <Snackbar onClose={handleClose} open={openMessage} message={message} />\n      </div>\n    );\n  }\n}\n\nexport default NewClient;\n","import React, { Component } from \"react\";\nimport {\n  CircularProgress,\n  Grid,\n  TextField,\n  FormLabel,\n  RadioGroup,\n  Radio,\n  FormControlLabel,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  OutlinedInput,\n  Button,\n  IconButton,\n  Snackbar\n} from \"@material-ui/core\";\nimport { Add, Refresh } from \"@material-ui/icons\";\nimport Selectv2 from \"react-select\";\n\nimport NewClient from \"./ClientNew\";\nimport { postCall, getClients } from \"../../service\";\n\nclass CallNew extends Component {\n  constructor() {\n    super();\n    this.state = {\n      call: {\n        client: \"\",\n        company: \"\",\n        system: \"MINOTARIA\",\n        kind: \"CALL\"\n      },\n      clients: [],\n      loading: true,\n      message: \"\",\n      openMessage: false,\n      openModal: false\n    };\n  }\n\n  componentWillMount() {\n    this.searchClients();\n  }\n\n  searchClients = () => {\n    getClients(\"\").then(res => {\n      res.clients.forEach(client => {\n        client.value = client._id;\n        client.label = `${client.name} (${client.company.key})`;\n      });\n\n      setTimeout(() => {\n        this.setState({ clients: res.clients, loading: false });\n      }, 500);\n    });\n  };\n\n  handleClick = () => {\n    this.setState({ openModal: true });\n  };\n\n  handleClose = e => {\n    this.setState({ openModal: false });\n  };\n\n  handleSelect = e => {\n    const { call } = this.state;\n\n    call.client = e._id;\n    call.company = e.company._id;\n\n    this.setState({ call: call });\n  };\n\n  handleChange = e => {\n    const { call } = this.state;\n\n    let field = e.target.name;\n    call[field] = e.target.value;\n\n    this.setState({ call: call });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    let { call } = this.state;\n    call.user = JSON.parse(localStorage.getItem(\"user\"))._id;\n\n    postCall(call).then(res => {\n      this.setState({ message: res.msg, openMessage: true });\n      setTimeout(() => {\n        this.props.history.push(`/call/${res.call}`);\n      }, 2000);\n    });\n  };\n\n  render() {\n    const {\n      call,\n      clients,\n      loading,\n      message,\n      openMessage,\n      openModal\n    } = this.state;\n\n    return (\n      <div className=\"container\">\n        {loading ? (\n          <CircularProgress />\n        ) : (\n          <div>\n            <h1>Nueva Llamada</h1>\n            <form onSubmit={this.handleSubmit}>\n              <Grid container spacing={8}>\n                <Grid item sm={6}>\n                  <TextField\n                    label=\"Problema\"\n                    name=\"problem\"\n                    multiline\n                    rows=\"5\"\n                    defaultValue={call.problem}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={this.handleChange}\n                  />\n                </Grid>\n                <Grid item sm={1} />\n                <Grid item sm={4} style={{ marginTop: \"15px\" }}>\n                  <Selectv2\n                    className=\"text-left\"\n                    defaultValue={call.client}\n                    placeholder=\"Cliente\"\n                    isSearchable\n                    name=\"client\"\n                    options={clients}\n                    onChange={this.handleSelect}\n                  />\n                  <IconButton\n                    aria-label=\"Nuevo Cliente\"\n                    onClick={this.searchClients}\n                  >\n                    <Refresh />\n                  </IconButton>\n                  <IconButton\n                    aria-label=\"Nuevo Cliente\"\n                    onClick={this.handleClick}\n                  >\n                    <Add />\n                  </IconButton>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={8}>\n                <Grid item sm={2}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-system-simple\">\n                      Sistema\n                    </InputLabel>\n                    <Select\n                      align=\"left\"\n                      name=\"system\"\n                      value={call.system}\n                      onChange={this.handleChange}\n                      input={\n                        <OutlinedInput\n                          labelWidth={60}\n                          name=\"system\"\n                          id=\"outlined-system-simple\"\n                        />\n                      }\n                    >\n                      <MenuItem value=\"MINOTARIA\">Minotaria</MenuItem>\n                      <MenuItem value=\"CALCULOFACIL\">Caculofacil</MenuItem>\n                      <MenuItem value=\"LISTASPB\">ListasPB</MenuItem>\n                      <MenuItem value=\"CFDI\">CFDI</MenuItem>\n                      <MenuItem value=\"UIF\">UIF</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n\n                <Grid item sm={1} />\n\n                <Grid item sm={2}>\n                  <FormControl variant=\"outlined\" fullWidth>\n                    <InputLabel htmlFor=\"outlined-kind-simple\">\n                      Tipo de Soporte\n                    </InputLabel>\n                    <Select\n                      align=\"left\"\n                      name=\"kind\"\n                      value={call.kind}\n                      onChange={this.handleChange}\n                      input={\n                        <OutlinedInput\n                          labelWidth={120}\n                          name=\"kind\"\n                          id=\"outlined-kind-simple\"\n                        />\n                      }\n                    >\n                      <MenuItem value=\"CALL\">Llamada</MenuItem>\n                      <MenuItem value=\"SOS\">S.O.S.</MenuItem>\n                      <MenuItem value=\"REVERSE\">Inverso</MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              </Grid>\n\n              <Grid container spacing={8}>\n                <Grid item sm={6}>\n                  <TextField\n                    label=\"Solución\"\n                    name=\"solution\"\n                    multiline\n                    rows=\"5\"\n                    defaultValue={call.solution}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    fullWidth\n                    onChange={this.handleChange}\n                  />\n                </Grid>\n              </Grid>\n              <Grid container spacing={8}>\n                <Grid item sm={3}>\n                  <FormLabel component=\"legend\" align=\"left\">\n                    Resultado:\n                  </FormLabel>\n                  <RadioGroup\n                    aria-label=\"ending\"\n                    name=\"ending\"\n                    defaultValue={call.ending}\n                    onChange={this.handleChange}\n                    row={true}\n                  >\n                    <FormControlLabel\n                      value=\"PRODUCTIVE\"\n                      control={<Radio />}\n                      label=\"Productiva\"\n                    />\n                    <FormControlLabel\n                      value=\"UNPRODUCTIVE\"\n                      control={<Radio />}\n                      label=\"Improductiva\"\n                    />\n                  </RadioGroup>\n                </Grid>\n                <Grid item sm={3}>\n                  <FormLabel component=\"legend\" align=\"left\">\n                    Estatus:\n                  </FormLabel>\n                  <RadioGroup\n                    aria-label=\"status\"\n                    name=\"status\"\n                    defaultValue={call.status}\n                    onChange={this.handleChange}\n                    row={true}\n                  >\n                    <FormControlLabel\n                      value=\"PENDING\"\n                      control={<Radio />}\n                      label=\"Pendiente\"\n                    />\n                    <FormControlLabel\n                      value=\"FINALIZED\"\n                      control={<Radio />}\n                      label=\"Finalizada\"\n                    />\n                  </RadioGroup>\n                </Grid>\n              </Grid>\n              <Grid container spacing={24}>\n                <Grid item sm={12}>\n                  <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Guardar\n                  </Button>\n                </Grid>\n              </Grid>\n            </form>\n            <Snackbar open={openMessage} message={message} />\n            <NewClient\n              openModal={openModal}\n              handleClose={this.handleClose}\n              {...this.props}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default CallNew;\n","import React, { Component } from \"react\";\r\n\r\nclass Home extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {};\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.props.history.push(\"/clients\");\r\n  }\r\n\r\n  render() {\r\n    return <div>Home</div>;\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport Company from \"./components/Company/Company\";\r\nimport CompanyDetail from \"./components/Company/CompanyDetail\";\r\nimport Client from \"./components/Client/Client\";\r\nimport ClientDetail from \"./components/Client/ClientDetail\";\r\nimport Call from \"./components/Call/Call\";\r\nimport CallDetail from \"./components/Call/CallDetail\";\r\nimport CallNew from \"./components/Call/CallNew\";\r\nimport Home from \"./components/Home\";\r\n\r\nconst Router = () => (\r\n  <Switch>\r\n    <Route\r\n      exact\r\n      path=\"/\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Home {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/clients\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Client {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/client/:id\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <ClientDetail {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/companies\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Company {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/company/:id\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <CompanyDetail {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/calls\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <Call {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/call\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <CallNew {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/call/:id\"\r\n      render={props =>\r\n        localStorage.getItem(\"token\") ? (\r\n          <CallDetail {...props} />\r\n        ) : (\r\n          <Redirect to=\"/login\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/login\"\r\n      render={props =>\r\n        !localStorage.getItem(\"token\") ? (\r\n          <Auth {...props} auth=\"login\" />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n    <Route\r\n      exact\r\n      path=\"/signup\"\r\n      render={props =>\r\n        !localStorage.getItem(\"token\") ? (\r\n          <Auth {...props} auth=\"signup\" />\r\n        ) : (\r\n          <Redirect to=\"/\" />\r\n        )\r\n      }\r\n    />\r\n  </Switch>\r\n);\r\n\r\nexport default Router;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport NavBar from \"./components/Navbar/Navbar\";\nimport Router from \"./Router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <NavBar />\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { MuiPickersUtilsProvider } from \"material-ui-pickers\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport MomentUtils from \"@date-io/moment\";\nimport \"moment/locale/es\";\n\nconst WithRouter = () => (\n  <BrowserRouter>\n    <MuiPickersUtilsProvider utils={MomentUtils}>\n      <App />\n    </MuiPickersUtilsProvider>\n  </BrowserRouter>\n);\n\nReactDOM.render(<WithRouter />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.76c735f5.png\";"],"sourceRoot":""}